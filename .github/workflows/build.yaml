name: Build
on:
  push:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: sudo apt-get install -y docker-compose

      - name: Start backend with Docker Compose
        working-directory: ./backend
        run: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

      - name: Log Containers
        run: docker ps

      - name: Wait for Backend to be Ready
        run: |
          for i in {1..10}; do
            echo "Checking if backend is available (attempt $i/10)..."
            docker ps
            if docker exec nestjs curl -s http://nestjs:3000/health/liveness | grep -q "200"; then
              echo "Backend is ready and reachable."
              break
            else
              echo "Backend not yet available; retrying in 10 seconds..."
              sleep 20
            fi
          done

          # Fail if not ready after retries
          if ! docker exec nestjs curl -s http://nestjs:3000/health/liveness | grep -q "200"; then
            echo "Backend did not become ready in time."
            exit 1
          fi

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ./angular-buch-frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('angular-buch-frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies and start Angular (if not using Docker)
        working-directory: ./angular-buch-frontend
        run: |
          npm install
          npm run start & # Start Angular in the background

      - name: Wait for Angular to be ready
        run: |
          until curl -s http://localhost:4200 | grep -q "<title>Angular"; do
            echo "Waiting for Angular app to be ready..."
            sleep 5
          done

      - name: Run Cypress Tests
        working-directory: ./angular-buch-frontend
        run: npx cypress run --headless --browser chrome

      - name: Run Angular Tests
        working-directory: ./angular-buch-frontend
        run: npm run test -- --watch=false

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}