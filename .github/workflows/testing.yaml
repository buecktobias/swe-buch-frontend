name: Testing
on:
  push:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Start backend with Docker Compose
        working-directory: ./backend
        run: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build --wait --wait-timeout 120 --renew-anon-volumes

      - name: Restore cached Primes
        id: cache-primes-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('angular-buch-frontend/package-lock.json') }}

      - name: Install dependencies and start Angular
        working-directory: ./angular-buch-frontend
        run: |
          npm install
          npm run start &

      - name: Cache node_modules
        uses: actions/cache/save@v4
        with:
          path: ~/.npm
          key: ${{ steps.cache-primes-restore.outputs.cache-primary-key }}
      - name: Test Nest Backend Runs Correctly
        run: | 
          sleep 10
          docker exec nest npm run test

      - name: Run Angular Tests
        working-directory: ./angular-buch-frontend
        run: npm run test:headless

      - name: Run Cypress Tests
        working-directory: ./e2e-tests
        run: |
          npm install
          npx cypress run --headless



  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}