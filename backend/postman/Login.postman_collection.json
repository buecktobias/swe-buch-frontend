{
    "info": {
        "name": "Login",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "New Access Token \"admin\"",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Statuscode 200', () => {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});\r",
                            "pm.test('Content-Type application/json', () => {\r",
                            "    const { response } = pm;\r",
                            "    const contentType = response.headers.get('Content-Type');\r",
                            "    pm.expect(contentType).to.match(/^application\\/json(; charset=utf-8)?/u);\r",
                            "});\r",
                            "pm.test('Body mit token, expiresIn, roles', () => {\r",
                            "    const body = pm.response.json();\r",
                            "    console.log(`${JSON.stringify(body)}`);\r",
                            "    const { access_token, expires_in, refresh_token, refresh_expires_in } = body;\r",
                            "    pm.expect(access_token).to.be.a('string').that.matches(/.+\\..+\\..+/u);\r",
                            "    pm.expect(expires_in).to.be.equal(1800);\r",
                            "    pm.expect(refresh_token).to.be.a('string').that.matches(/.+\\..+\\..+/u);\r",
                            "    pm.expect(refresh_expires_in).to.be.equal(3600);\r",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "username",
                            "value": "admin",
                            "type": "text"
                        },
                        {
                            "key": "password",
                            "value": "p",
                            "type": "text"
                        }
                    ]
                },
                "url": {
                    "raw": "{{base_url}}/auth/token",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "auth",
                        "token"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "New Access Token \"user\"",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Statuscode 200', () => {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});\r",
                            "pm.test('Content-Type application/json', () => {\r",
                            "    const { response } = pm;\r",
                            "    const contentType = response.headers.get('Content-Type');\r",
                            "    pm.expect(contentType).to.match(/^application\\/json(; charset=utf-8)?/u);\r",
                            "});\r",
                            "pm.test('Body mit token, expiresIn, roles', () => {\r",
                            "    const body = pm.response.json();\r",
                            "    console.log(`${JSON.stringify(body)}`);\r",
                            "    const { access_token, expires_in, refresh_token, refresh_expires_in } = body;\r",
                            "    pm.expect(access_token).to.be.a('string').that.matches(/.+\\..+\\..+/u);\r",
                            "    pm.expect(expires_in).to.be.equal(1800);\r",
                            "    pm.expect(refresh_token).to.be.a('string').that.matches(/.+\\..+\\..+/u);\r",
                            "    pm.expect(refresh_expires_in).to.be.equal(3600);\r",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "noauth"
                },
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "username",
                            "value": "user",
                            "type": "text"
                        },
                        {
                            "key": "password",
                            "value": "p",
                            "type": "text"
                        }
                    ]
                },
                "url": {
                    "raw": "{{base_url}}/auth/token",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "auth",
                        "token"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "New Access Token Invalid Username",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Statuscode 401', () => {\r",
                            "    pm.response.to.have.status(401);\r",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "noauth"
                },
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "username",
                            "value": "FALSCH",
                            "type": "text"
                        },
                        {
                            "key": "password",
                            "value": "p",
                            "type": "text"
                        }
                    ]
                },
                "url": {
                    "raw": "{{base_url}}/auth/token",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "auth",
                        "token"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "New Access Token Invalid Password",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Statuscode 401', () => {\r",
                            "    pm.response.to.have.status(401);\r",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "noauth"
                },
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "username",
                            "value": "admin",
                            "type": "text"
                        },
                        {
                            "key": "password",
                            "value": "FALSCH",
                            "type": "text"
                        }
                    ]
                },
                "url": {
                    "raw": "{{base_url}}/auth/token",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "auth",
                        "token"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Refresh Access Token",
            "request": {
                "auth": {
                    "type": "noauth"
                },
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "refresh_token",
                            "value": "eyJhbGciOiJIUzUxMiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzZGU5ZDdhMC1jY2NlLTQ5MzItOGE3OS05NjY2ZGRhNzUxZDEifQ.eyJleHAiOjE3MTIyNDgzMjUsImlhdCI6MTcxMjI0NDcyNSwianRpIjoiYjE5ZGJkNWYtZjY3ZC00NzdmLThkODQtYWIyZjcyMzM4MWZhIiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlYWxtcy9hY21lIiwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlYWxtcy9hY21lIiwic3ViIjoiZjkxNTZhYmYtNmRhNS00OGJmLWJjMWMtODEzM2FhZTI3NDE0IiwidHlwIjoiUmVmcmVzaCIsImF6cCI6ImJ1Y2gtY2xpZW50Iiwic2Vzc2lvbl9zdGF0ZSI6IjRmMGNiMjBjLTk2MzMtNDk2Ny1iMWEwLTYxZDliYzA5MTU3MyIsInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsInNpZCI6IjRmMGNiMjBjLTk2MzMtNDk2Ny1iMWEwLTYxZDliYzA5MTU3MyJ9.sywRvFzemFGLqLy4ydP_pf-rcg9aC-KA_p-qT88-017yVnRFIR_Bz-vU-KSTDJemWT3GSU-Tw-go75sAtq1fyw",
                            "type": "text"
                        }
                    ]
                },
                "url": {
                    "raw": "{{base_url}}/auth/refresh",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "auth",
                        "refresh"
                    ]
                }
            },
            "response": []
        }
    ]
}
