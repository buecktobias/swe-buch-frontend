@startuml
node Frontend{
skinparam packageStyle rectangle
skinparam class {
    BackgroundColor<<Service>> LightBlue
    BorderColor<<Service>> DarkBlue
}

skinparam class {
    BackgroundColor<<ValueObject>> LightYellow
    BorderColor<<ValueObject>> DarkOrange
}


class User<<ValueObject>>{

    + <<readonly>> firstName
    + <<readonly>> lastName
    + <<readonly>> email
    + roles: string[]
    + hasRole(role: string): bool
}

class SessionTokens <<ValueObject>>{
    + <<readonly>> accessToken: str
    + <<readonly>> accessTokenExpiresIn: int
    + <<readonly>> refreshToken: str
    + <<readonly>> refreshTokenExpiresIn: int
    + getAccessTokenExpirationDate()
    + getRefreshTokenExpirationDate()
    + isAccessTokenExpired()
    + isRefreshTokenExpired()
}

interface AuthService<<Service>>{
    + currentSession: SessionTokens?
    + currentUser: User?
    + login(username: string, password: string): User
    + logout(): void
}

interface TokenService<<Service>>{
    + login(username, password): SessionTokens
    + refresh(token: SessionTokens): SessionTokens
}
}
node Backend{
    class RESTController{
        + token(username, password): TokensJSON
        + refresh(refresh_token: string): TokensJSON
    }
}

TokenService .down.> Backend.RESTController: <<use>>
TokenService ..> SessionTokens: manages
AuthService ..> TokenService: <<use>>
AuthService "1" o--> "?" User
AuthService "1" o--> "?" SessionTokens
@enduml