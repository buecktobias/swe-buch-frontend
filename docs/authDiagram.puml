@startuml
node Frontend{
skinparam packageStyle rectangle
skinparam class {
    BackgroundColor<<Service>> LightBlue
    BorderColor<<Service>> DarkBlue
}

skinparam class {
    BackgroundColor<<ValueObject>> LightYellow
    BorderColor<<ValueObject>> DarkOrange
}


class User<<ValueObject>>{
    + firstName
    + lastName
    + email
    + roles: string[]
}

class LoginResult<<ValueObject>>{
    + meta
    + tokens: SessionTokens
}

class SessionTokens <<ValueObject>>{
    + accessToken: str
    + accessTokenExpiresIn: int
    + refreshToken: str
    + refreshTokenExpiresIn: int
}

interface AuthService<<Service>>{
    + currentSession: SessionTokens?
    + currentUser: User?
    + login(username: string, password: string): void
    + logout(): void
}

interface TokenService<<Service>>{
    + login(username, password): LoginResult
    + refresh(token: SessionTokens): LoginResult
}
}
node Backend{
    class GraphQLController{
        + token(username, password): TokensJSON
        + refresh(refresh_token: string): TokensJSON
    }
}

TokenService .down.> Backend.GraphQLController: <<use>>
TokenService ..> SessionTokens: manages
AuthService ..> TokenService: <<use>>
AuthService "1" o--> "?" User
AuthService "1" o--> "?" SessionTokens
LoginResult o-> SessionTokens: contains
@enduml